Pattern Category | Prompt Pattern
=========================================
Input Semantics  | Meta Language Creation
-----------------------------------------
Output           | Output Automater
Customization    | Persona
                 | Visualization Generator
                 | Recipe
                 | Template
-----------------------------------------
Interaction      | Flipped Interaction
                 | Game Play
                 | Infinite Generation                 
-----------------------------------------
Error            |   
Identification   | Fact Check List
                 | Reflection
-----------------------------------------
Prompt           | Question Refinement
Improvement      | Alternative Approaches
                 | Cognitive Verifier
                 | Refusal Breaker
-----------------------------------------
Context Control  | Context Manager
-----------------------------------------





Intent and context describe the problem to the llm 

X = a word, noun, verb or adjective or a combination of them or a sentence


A. There seems to be a need for development of a new form of language to get the desired output from the llm. MetaLanguage for llm Prompting.
    1. Vanderbilt research suggests to call it fundamental contextual statements 
        An open research question, therefore, is what approach is
        more effective than formal grammars for describing prompt
        pattern structure and ideas. We propose the concept of fundamental contextual statements, which are written descriptions
        of the important ideas to communicate in a prompt to an LLM.

    2. FCS is to be more intuitive than formal grammar
    3. FCS is to be more flexible than formal grammar
    4. Ideas can be described using alternate symbols and wording after introducing them to the llms using MetaLanguage pattern


B. Input Symantics
    1. It deals with how well does the llm understand the input
    2. This pattern is useful if the default input language is not understood by the llm
    3. Includes creation of meta language for the llm

    4. MetaLanguage Creation Pattern
        a. Intent and Context - This involves for llm to Analyze and 
            understand user intent (verb) or what the user wants to do (verb), 
            then understand the context of the input. 


            -- During the coversation user would create a prompt via alternate language
            -- User would use few shot learning to teach the llm the alternate language
            -- The intent of this pattern to explain the Symantics of the alternate language to the llm
            -- So the user can write future prompts in the alternate language

        b. motivation
            -- The llm is not able to understand the default language

        c. strucure and key ideas
            -- when I say x I mean y. 
            -- when I say x I want you to do y
            -- The key structure of this pattern involves explaining the
                meaning of one or more symbols, words, or statements to
                the LLM so it uses the provided semantics for the ensuing
                conversation.

        d. example implementation
            -- When I say User login --> lands on the dashboard
            -- --> means next step in user flow or user journey

            -- When I say I want to I want to go out tonight, I want you to use the search tool to find me a place to go out tonight

        e. Consequences
            -- It's a powerful technique that can yield a great deal of control over the llm but one has to be careful to not cause confusion
            -- In general llms perform better on data they are trained on. 
            -- Limiting to use a single MetaLanguage for each coversation session is a good idea

        
C. Output Customization
    1. category focuses on constraining or tailoring the types, formats, structure, or other properties
        of the output generated by the LLM.

    2. Output Automater Pattern
        a. Intent and Context
            -- The intent of this pattern is to have
                the LLM generate a script or other automation artifact that can
                automatically perform any steps it recommends taking as part
                of its output.
            -- The goal is to reduce the manual effort needed
                to implement any LLM output recommendations.

        b. motivation
            -- When the output of the llm is a set of steps to be performed by the user, 
                then the user can automate the steps using the output automater pattern
        
        c. strucure and key ideas
            -- Contextual statement
                -- When you produce an output that has at least one step abd the following
                    properties (alternatively always do this)
                        -- This instruction is Identify when automated script is needed
                        -- The scope can be limited to a single step or a set of steps
                -- Create an executable script for x to perform the steps
                    -- This should be concret statement about the type of output to be generated

        d. example implementation
                -- Document editing example
                    -- "From now on, whenever you generate instructions that involve more than three editing steps in a document, 
                        generate a step-by-step guide that can be followed to automatically make the specified edits or changes to the existing document."
                        For example, if the task involves changing the font, adjusting the margins, and adding a header, the LLM would generate a guide like this:
                        Open the document in your word processor.
                        Select all text (Ctrl+A or Command+A).
                        Change the font to Times New Roman, size 12.
                        Go to the 'Page Layout' or 'Format' menu and adjust the margins to 1 inch on all sides.
                        Go to the 'Insert' menu, select 'Header', and type "My Document" in the header space.    
        
        e. Consequences
            -- LLM would need access to tools to automate the output
            -- Lesser option would be to trick the llm into generating code for automating the output
            -- Needs full context to produce automation artifacts

    3. Persona Pattern
        a. Intent and Context
            -- The intent of this patter is to give llm a persona to help it generate output
        
        b. motivation
            -- The user may not know the tasks that need to be performed but they might know the
                persona of the person who can perform the task. like a doctor, lawyer etc.

        c. strucure and key ideas
            -- As a persona X, 
            -- provide output that persona X would provide


        d. example implementation
            -- As a doctor, provide output that a doctor would provide
            -- Persona Pattern is a good pattern to combine with game play pattern

        e. Consequences
            -- it may lead to llm making interesting assumptions and "hellucinations"
                regarding the context of the persona

            

    4. Visualization Generator Pattern
        a. Intent and Context
            -- The intent of this pattern is to have the llm generate a visualization via text.
            -- This pattern allows the creation of visualization by creating input for visualization tools
                like Dall-E, Graphviz Dot 

        b. motivation
            -- To give llms the ability to generate visualizations
        
        c. strucure and key ideas
            -- Generate an X that I can provide to tool Y to visualize it
            -- llm is expected to generate description of the image that the Y tool can consume

        d. example implementation
            -- “Whenever I ask you to visualize something, please
                create either a Graphviz Dot file or DALL-E prompt
                that I can use to create the visualization. Choose
                the appropriate tools based on what needs to be
                visualized.”
        
        e. Consequences
            --  The pattern creates a target pipeline
                for the output to render a visualization. The pipeline may
                include AI generators, such as DALL-E, that can produce
                rich visualizations. The pattern allows the user to expand the
                expressive capabilities of the output into the visual domain.

    5. Recipe Pattern
        a. Intent and Context
            -- This pattern provides constraints to
                ultimately output a sequence of steps given some partially
                provided “ingredients” that must be configured in a sequence
                of steps to achieve a stated goal. It combines the Template,
                Alternative Approaches, and Reflection patterns.
        
        b. motivation
            --  Typically, users generally know—or have an idea
                of—what the end goal should look like and what “ingredients”
                belong in the prompt. However, they may not necessarily know
                the precise ordering of steps to achieve that end goal.

        c. strucure and key ideas
            -- Contextual Statements
                -- I would like to achieve X (state the goal)
                -- I know that I need to perform steps A,B,C (stating partial known steps)
                -- Provide a complete sequence of steps for me (asking for complete steps)
                -- Fill in any missing steps (asking for missing steps)
                -- Identify any unnecessary steps (asking for identfy unnecessary steps)

        d. example implementation
            -- “I am trying to deploy an application to the cloud. I
                know that I need to install the necessary dependencies on a virtual machine for
                my application. I know
                that I need to sign up for an AWS account. Please
                provide a complete sequence of steps. Please fill in
                any missing steps. Please identify any unnecessary
                steps.”

        e. Consequences
            -- User may not have a good description of the goal, build or design
            -- This pattern may use unwanted bias


    6. Template Pattern
        a. Intent and Context
            -- The intent of the pattern is to
                ensure an LLM’s output follows a precise template in terms of
                structure.
        
        b. motivation
            -- To generate a use-case specific template
            
        c. strucure and key ideas
            -- Contextual Statements
                -- I am going to provide a template for your output
                -- X is my placeholder for content
                -- Try to fit the output into one or more of the placeholders that I list
                -- Please preserve the formatting and overall template that
                -- I provide
                -- This is the template: PATTERN with PLACEHOLDERS

        d. example implementation
            -- “I am going to provide a template for your output. Everything in all caps is a placeholder. Any
                time that you generate text, try to fit it into one
                of the placeholders that I list. Please preserve the
                formatting and overall template that I provide at
                https://myapi.com/NAME/profile/JOB”

            -- User: “Generate a name and job title for a person”
            -- ChatGPT: “https://myapi.com/Emily Parker/profile/
                Software Engineer”

        e. Consequences
            -- It can limit the quality of output by limiting the output to the template
            -- Filtering can be hard to combine with out ouput category patterns
            -- It wont display alternative approaches



D. Interaction
    -- Focus here is on Interaction between the user and the llm

    1. Fliiped Interaction Pattern
        a. Intent and Context
            -- Asking the llm to act as the user to identify the user's needs
            -- Asking the llm to drive the interaction
        
        b. motivation
            --  Rather than having the user drives a conversation, an LLM often has knowledge it can use to more
                accurately obtain information from the user. The goal of the
                Flipped Interaction pattern is to flip the interaction flow so the
                LLM asks the user questions to achieve some desired goal. The
                LLM can often better select the format, number, and content
                of the interactions to ensure that the goal is reached faster,
                more accurately, and/or by using knowledge the user may not
                (initially) possess.

        c. strucure and key ideas
            -- Contextual Statements
                -- I would like you to ask me questions to achieve X
                    You should ask questions until this condition is met or
                    to achieve this goal (alternatively, forever)
                    (Optional) ask me the questions one at a time, two at
                    a time, etc.

        d. example implementation
                -- “From now on, I would like you to ask me questions
                    to deploy a Python application to AWS. When you
                    have enough information to deploy the application,
                    create a Python script to automate the deployment.”
            
        e. Consequences
            -- keeping the questioning session open ended can improve the quality of output
            -- it can also lead to the llm unnecessary questioning
            -- if a requirement is known in advance than it's better to provide it to the llm

        
    2. Game Play Pattern
            a. Intent and Context
                -- The intent of this pattern is to have the LLM
                    generate a game that the user can play to achieve some goal.
                    
            b. motivation
                -- You would like the LLM to generate scenarios or questions revolving around a specific topic and require
                    users to apply problem solving or other skills to accomplish
                    a task related to the scenario.

            c. strucure and key ideas
                -- Contextual Statements
                -- Create a game for me around X
                -- One or more fundamental rules of the game

            d. example implementation
                -- as a historian, create a game aroud high school history
                -- ask me questions about high school history
                -- wait for my response
                -- if my response is correct, ask me another question
                -- if my response is incorrect, then provide me with the correct answer
                -- repeat until I get 10 questions correct

            e. Consequences
                -- This pattern can be combined effectively
                    with the Persona, Infinite Generation, and Visualization Generator patterns
                

    3. Infinite Generation Pattern
        a. User Intent and description or full context of the problem
            -- 
        b. IG Pattern value








E. Prompt Improvement



    


 

            






