classes
    Controller objects
    Views objects
    Data objects  

Prompt engineering is the means by which LLMs are
programmed via prompts.

How to program a language model to get the desired output
--Prompt patterns are essential to effective prompt engineering.

-- Applying software patterns to prompt patterns
    • A name and classification - Each pattern has a name that
    identifies the pattern and should be used consistently. A
    classification groups patterns into broad categories, such
    as creational, structural, or behavioral.
    • The intent - concisely conveys the purpose the pattern is
    intended to achieve.
    • The motivation - documents the underlying problem the
    pattern is meant to solve and the importance of the
    problem.
    • The structure and participants. - The structure describes
    the different pattern participants (such as classes and
    objects) and how they collaborate to form a generalized
    solution.
    • Example - code concretely maps the pattern to some
    underlying programming language(s) and aids developers
    in gaining greater insight into how that pattern can be
    applied effectively.
    • Consequences - summarize the pros and cons of applying
    the pattern in practice.


User input = "Thai"
user clicks search
system prompt = Where is good {Thai} food in the city.
response = ....


user input = "can you extract the questions from the text and provide answers to the questions {document}
document extact 
system input = "find the questions in the document"

questions = response 1

system input = "find the answers of the {questions}, 
final answer = predict..


Prompt Limit is important to make use of the space

use previous reponses from the llm can be used to get accurate outputs

#-----------------------------------------------------------------------------------------------------------------
Saffron Pattern ...
Chutney Pattern ...
Spice Pattern ...
Intent Pattern ...

Getting LLM to generate examples by feeding it few examples, then letting it come up with example steps to tap into llm resonining to figure out the next step item

Root Prompt 
    Helps create guardrails for a output

Persona Pattern
    Act as a Bee expert


Question Refinement Pattern

    -- Pattern to improve questions to llm by letting llm suggest refinement of ideas and questions
        Examples:

            From now on, whenever I ask a question, suggest a better version of the question to use instead

            From now on, whenever I ask a question, suggest a better version of the question and ask me if I would like to use it instead

            Whenever I ask a question about dieting, suggest a better version of the question that emphasizes healthy eating habits and sound nutrition.
            Ask me for the first question to refine.    

            Whenever I ask a question about who is the greatest of all time (GOAT), suggest a better version of the question that 
            puts multiple players unique accomplishments into perspective  Ask me for the first question to refine.



Cognitive Verifier pattern
    -- Tell the GPT to breakdown a task into smaller tasks 
    -- telling GPT to expand on a question from broad to focused --> Converting original qusetion into Sub-question

    -- When you are asked a question, follow these rules. Generate a number of additional questions that would help you more accurately answer the question. 
        Combine the answers to the individual questions to produce the final answer to the overall question.
    
    -- When you are asked to create a recipe, follow these rules. Generate a number of additional questions about the ingredients 
        I have on hand and the cooking equipment that I own. 
        Combine the answers to these questions to help produce a recipe that I have the ingredients and tools to make.


Audience Persona Pattern
    -- Asking the LLM to product an output for a specific Audience
    -- Explain how the supply chains for US grocery stores work to me. Assume that I am Ghengis Khan. 



Fliiped Interaction Pattern
    -- Getting LLM to ask the user questions to achhieve a goal or task
    Example
        -- I would like you to ask me questions to achieve X 
        -- You should ask questions until condition Y is met or to achieve this goal (alternatively, forever) 
        -- (Optional) ask me the questions one at a time, two at a time, ask me the first question, etc.
        -- I would like you to ask me questions to help me create variations of my marketing materials.  
            You should ask questions until you have sufficient information about my current draft messages, audience, and goals. Ask me the first question.

Few Shot Prompting
    -- Providing an example of the output
        --Sentiment Analysis of user reviews 
            Positive
            Negative
            Nuteral

    -- Few-Shot for Actions
        -- Providing examples of actions and then asking for it to predict the next actions
            provide proper context

    -- Few-Shot examples with intermediate steps
        -- Analyze text
        -- Action
        -- Analyze text
        -- Action

    -- Few-Shot Chain of Thought
        -- Few- shot example with reasoning to create a chain of thought 
            to help llm think through the problem
        -- Analyze Example, query, document
        -- reasoning
        -- Action e.g. providing answer

    -- Few-Shot ReAct Prompting
        -- 
        -- Solving problems by using tools
            -- Reason
            -- Action
            -- Result
    
    -- Using llms to grade itself or another llm
        -- Few shot pattern can be used to teach llm to grade output
            -- input
            -- Output
            -- explaination
            -- grade
    

Game Play Pattern
    -- Engaging in a conversation to play a game with the llm
    -- Create a game for me around X OR we are going to play an X game
    -- One or more fundamental rules of the game

    -- Create a cave exploration game  for me to discover a lost language. 
        Describe where I am in the cave and what I can do. I should discover 
        new words and symbols for the lost civilization in each area of the 
        cave I visit. Each area should also have part of a story that uses 
        the language. I should have to collect all the words and symbols 
        to be able to understand the story. Tell me about the first area and 
        then ask me what action to take. 

Template Pattern
    -- Placeholders and rules play a key role in the template pattern.
    -- I am going to provide a template for your output 

            X is my placeholder for content 

            Try to fit the output into one or more of the placeholders that I list 

            Please preserve the formatting and overall template that I provide 

            This is the template: PATTERN with PLACEHOLDERS

            You will need to replace "X" with an appropriate placeholder, such as 
            "CAPITALIZED WORDS" or "<PLACEHOLDER>". You will then need to specify 
            a pattern to fill in, such as "Dear <FULL NAME>" or "NAME, TITLE, COMPANY".

    -- Create a random strength workout for me today with complementary exercises. 
        I am going to provide a template for your output . CAPITALIZED WORDS 
        are my placeholders for content. Try to fit the output into one or 
        more of the placeholders that I list. Please preserve the formatting 
        and overall template that I provide. This is the template: 
        NAME, REPS @ SETS, MUSCLE GROUPS WORKED, DIFFICULTY SCALE 1-5, 
        FORM NOTES

    -- Please create a grocery list for me to cook macaroni and cheese from scratch,
         garlic bread, and marinara sauce from scratch. I am going to provide a 
         template for your output . <placeholder> are my placeholders for content. 
         Try to fit the output into one or more of the placeholders that I list. 
         Please preserve the formatting and overall template that I provide.   

            This is the template:   
            Aisle <name of aisle>: 
            <item needed from aisle>, <qty> (<dish(es) used in>)

Meta Language Creation Pattern
    -- Shorthand or convenient notation to provide instruction to the language
        model. 

    -- Examples:
        When I say "variations(<something>)", I mean give me ten different 
        variations of <something>
        Usage: "variations(company names for a company that sells 
        software services for prompt engineering)"
        Usage: "variations(a marketing slogan for pickles)"

        When I say Task X [Task Y], I mean Task X depends on 
        Task Y being completed first. 
        Usage: "Describe the steps for building a house using my task 
        dependency language."
        Usage: "Provide an ordering for the steps: Boil Water [Turn on Stove], 
        Cook Pasta 
        [Boil Water], Make Marinara [Turn on Stove], Turn on Stove 
        [Go Into Kitchen]"

        Traveling from Michigan --> California



Recipe Pattern - filling in the gaps in knowledge
    -- Works well when there are gaps in knowledge by giving the llm partial
        set of steps or info to create the overall solution
    -- I would like to achieve X 
        I know that I need to perform steps A,B,C 
        Provide a complete sequence of steps for me 
        Fill in any missing steps 
        (Optional) Identify any unnecessary steps
    -- You will need to replace "X" with an appropriate task. You will 
        then need to specify 
        the steps A, B, C that you know need to be part of the recipe / 
        complete plan. 

    -- I would like to  purchase a house. I know that I need to perform steps 
        make an offer and close on the house. Provide a complete sequence of 
        steps for me. Fill in any missing steps.

Alternative Approaches Pattern
    -- When I provide a task to the llm, ask it to provide alternative approaches
        to the task
        -- I would like to achieve X 
            Provide alternative approaches to achieve X
            (Optional) Provide a list of pros and cons for each approach
        -- Giving GPT a task and asking it to provide alternative approaches
            by writing different prompts for the llm to generate the output

        -- If there are alternative ways to accomplish a task X that I
             give you, list the best alternate approaches 
            (Optional) compare/contrast the pros and cons of each approach 
            (Optional) include the original way that I asked 
            (Optional) prompt me for which approach I would like to use
            You will need to replace "X" with an appropriate task.

        -- For every prompt I give you, If there are alternative ways to word a prompt hat I give you, list the best alternate wordings . 
            Compare/contrast the pros and cons of each wording. 

        -- For anything that I ask you to write, determine the underlying problem 
            that I am trying to solve and how I am trying to solve it. List at least one alternative approach to solve the problem and compare / 
            contrast the approach with the original approach implied by my request to you.













    





----------------------------------------------------------------------------------------------------------------------------------------------
llms are predicting series of words after looking at the language input
    learning patterns to predict the next word

Given the text that came before
When looking at the current text
Then try to predict the next word 

Models
    GPT
    Lama
    Alpaca

Prompt Patterns is way of structuring a statement to llm
        -- a prompt sets the context for the conversation and tells the LLM what
        information is important and what the desired output form and
        content should be.


Prompts have the potential for self-adaptation, suggesting other prompts
to gather additional information or generate related artifacts.
These advanced capabilities of prompts highlight the importance of engineering them to provide value beyond simple text
or code generation.
    